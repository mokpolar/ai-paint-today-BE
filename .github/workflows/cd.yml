name: main branch cd

on:
    push:
        branches: [ "main", "feature/21" ]

env:
    PROD_PATH: ./src/main/resources/application-prod.yml
    OAUTH_PATH: ./src/main/resources/application-oauth.yml

jobs:
    deploy:
        runs-on: ubuntu-latest
        environment: prod
        steps:
            -   name: checkout
                uses: actions/checkout@v3

            -   name: application-prod.yml setting
                uses: microsoft/variable-substitution@v1
                with:
                    files: ${{ env.PROD_PATH }}
                env:
                    spring.datasource.url: ${{ secrets.RDS_URL }}
                    spring.datasource.username: ${{ secrets.RDS_USERNAME }}
                    spring.datasource.password: ${{ secrets.RDS_PASSWORD }}

            -   name: application-oauth.yml setting
                uses: microsoft/variable-substitution@v1
                with:
                    files: ${{ env.OAUTH_PATH }}
                env:
                    oauth2.google.client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
                    oauth2.google.client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
                    oauth2.google.token-url: ${{ secrets.GOOGLE_TOKEN_URL }}
                    oauth2.google.user-info-url: ${{ secrets.GOOGLE_USER_INFO_URL }}
                    oauth2.google.redirect-uri: ${{ secrets.GOOGLE_REDIRECT_URI }}
                    oauth2.google.delete-account-url: ${{ secrets.GOOGLE_DELETE_ACCOUNT_URL }}
                    oauth2.apple.ios.client-id: ${{ secrets.APPLE_IOS_CLIENT_ID }}
                    oauth2.apple.ios.client-secret: ${{ secrets.APPLE_IOS_CLIENT_SECRET }}
                    oauth2.apple.ios.token-url: ${{ secrets.APPLE_IOS_TOKEN_URL }}
                    oauth2.apple.ios.delete-account-url: ${{ secrets.APPLE_IOS_DELETE_ACCOUNT_URL }}
                    jwt.secret: ${{ secrets.JWT_SECRET }}

            -   name: Set up JDK 11
                uses: actions/setup-java@v3
                with:
                    java-version: '11'
                    distribution: 'temurin'

            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew

            -   name: Clean and Build with Gradle
                run: ./gradlew clean build

            -   name: Cache Gradle packages
                uses: actions/cache@v1
                with:
                    path: ~/.gradle/caches
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
                    restore-keys: ${{ runner.os }}-gradle

            -   name: Copy JAR file to EC2
                uses: appleboy/scp-action@master
                with:
                    host: ${{ secrets.EC2_HOST }}
                    username: ${{ secrets.EC2_USERNAME }}
                    key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
                    port: 22
                    source: build/libs/draw-my-today-0.0.1-SNAPSHOT.jar
                    target: /home/ubuntu/SpringServer

            -   name: Deploy EC2
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.EC2_HOST }}
                    username: ${{ secrets.EC2_USERNAME }}
                    key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
                    port: 22
                    script: |
                        cd SpringServer
                        ./start.sh